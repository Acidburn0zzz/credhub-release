server.port=<%= p("credhub.port") %>
auth-server.url=<%= p("credhub.user_management.uaa.url") %>
<% if p('credhub.encryption.provider') == 'hsm' %>
hsm.partition=<%= p("credhub.encryption.hsm.partition") %>
hsm.partition-password=<%= p("credhub.encryption.hsm.partition_password") %>
hsm.encryption-key-name=<%= p("credhub.encryption.hsm.encryption_key_name") %>
<% elsif p('credhub.encryption.provider') == 'dev_internal' %>
encryption.provider=dev_internal
<% if_p("credhub.encryption.dev_key") do |dev_key| %>
<%
def invalid_dev_key?(dev_key)
dev_key[/\H/] || dev_key.size != 32
end
raise ArgumentError, "credhub.encryption.dev_key is not valid (must be 128 bit hexadecimal string)." if invalid_dev_key?(dev_key) %>
encryption.dev-key=<%= dev_key %>
<% end
end %>
<% if_p('credhub.data_storage.username') do %>
spring.datasource.username=<%= p("credhub.data_storage.username") %>
<% if_p('credhub.data_storage.password') do %>
spring.datasource.password=<%= p("credhub.data_storage.password") %>
<% end %>
<% end %>
spring.jpa.hibernate.ddl-auto=validate
<%
def have_tls_ca
  begin
    return p('credhub.data_storage.tls_ca').length > 0
  rescue UnknownProperty
    return false
  end
end

# The ssl-password is also needed by pre-start.rb.
# It seems like the only way to share the value is by copying the code and
# storing the value in a file. :(
def pseudo_random_string(len)
  password = nil

  File.open('/var/vcap/data/tmp/director/ssl_password', 'a+') { |f|
    f.seek(0, 0)
    password = f.read

    if password.to_s.empty?
      password = SecureRandom.urlsafe_base64(len)
      f.write(password)
    end
  }

  password
end

ssl_password = pseudo_random_string(20)

case p("credhub.data_storage.type")
  when 'in-memory'
    @url = "jdbc:h2:mem:#{p("credhub.data_storage.database")}"
    @flyway_location = 'h2'
  when 'postgres'
    @url = "jdbc:postgresql://#{p("credhub.data_storage.host")}:#{p("credhub.data_storage.port")}/#{p("credhub.data_storage.database")}?autoReconnect=true"
    @flyway_location = 'postgres'
  when 'mysql'
    @url = "jdbc:mysql://#{p("credhub.data_storage.host")}:#{p("credhub.data_storage.port")}/#{p("credhub.data_storage.database")}?autoReconnect=true"
    @flyway_location = 'mysql'

    case p('credhub.data_storage.require_tls')
      when true
        @url << "&useSSL=true&requireSSL=true&verifyServerCertificate=true"
        if have_tls_ca
          @url << "&trustCertificateKeyStorePassword=#{ssl_password}"
          @url << "&trustCertificateKeyStoreUrl=file:///var/vcap/jobs/credhub/config/db_trust_store.jks"
        end
      when false
        # no op
      else
        raise ArgumentError, "credhub.data_storage.require_tls (#{p('credhub.data_storage.require_tls')}) must be set to \"true\" or \"false\"."
    end
  else
    raise ArgumentError, 'credhub.data_storage.type must be set to "mysql", "postgres", or "in-memory".'
end
%>
spring.datasource.url=<%=@url%>

server.ssl.enabled=true
server.ssl.key-store=/var/vcap/jobs/credhub/config/cacerts.jks
server.ssl.key-password=<%= ssl_password %>
server.ssl.key-alias=credhub_tls_cert
server.ssl.ciphers=ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384

flyway.locations=classpath:/db/migration/common,classpath:/db/migration/<%=@flyway_location%>

security.oauth2.resource.jwt.key-value=<%= p("credhub.user_management.uaa.verification_key").split("\n").map(&:strip).join() %>

logging.config=/var/vcap/jobs/credhub/config/log4j2.properties
