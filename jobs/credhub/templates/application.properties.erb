server.port=<%= p("credhub.port") %>
auth-server.url=<%= p("credhub.user_management.uaa.url") %>
hsm.partition=<%= p("credhub.hsm.partition") %>
hsm.partition-password=<%= p("credhub.hsm.partition_password") %>
hsm.encryption-key-name=<%= p("credhub.hsm.encryption_key_name") %>
<% if_p('credhub.data_storage.username') do %>
spring.datasource.username=<%= p("credhub.data_storage.username") %>
<% if_p('credhub.data_storage.password') do %>
spring.datasource.password=<%= p("credhub.data_storage.password") %>
<% end %>
<% end %>
spring.jpa.hibernate.ddl-auto=create
<%
def have_tls_ca
  begin
    return p('credhub.data_storage.tls_ca').length > 0
  rescue UnknownProperty
    return false
  end
end

case p("credhub.data_storage.type")
  when 'in-memory'
    @url = "jdbc:h2:mem:#{p("credhub.data_storage.database")}"
  when 'postgres'
    @url = "jdbc:postgresql://#{p("credhub.data_storage.host")}:#{p("credhub.data_storage.port")}/#{p("credhub.data_storage.database")}?autoReconnect=true"
  when 'mysql'
    @url = "jdbc:mysql://#{p("credhub.data_storage.host")}:#{p("credhub.data_storage.port")}/#{p("credhub.data_storage.database")}?autoReconnect=true"

    case p('credhub.data_storage.require_tls')
      when true
        @url << "&useSSL=true&requireSSL=true&verifyServerCertificate=true"
        if have_tls_ca
          @url << "&trustCertificateKeyStorePassword=changeit"
          @url << "&trustCertificateKeyStoreUrl=file:///var/vcap/jobs/credhub/config/db_trust_store.jks"
        end
      when false
        # no op
      else
        raise ArgumentError, "credhub.data_storage.require_tls (#{p('credhub.data_storage.require_tls')}) must be set to \"true\" or \"false\"."
    end
  else
    raise ArgumentError, 'credhub.data_storage.type must be set to "mysql", "postgres", or "in-memory".'
end
%>
spring.datasource.url=<%=@url%>

server.ssl.enabled=true
server.ssl.key-store=/var/vcap/jobs/credhub/config/cacerts.jks
server.ssl.key-password=changeit
server.ssl.key-alias=credhub_tls_cert
server.ssl.ciphers=ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384,DHE-RSA-AES128-GCM-SHA256,DHE-RSA-AES256-GCM-SHA384

security.oauth2.resource.jwt.key-value=<%= p("credhub.user_management.uaa.verification_key").split("\n").map(&:strip).join() %>
