server.port=<%= p("credhub.port") %>
auth-server.url=<%= p("credhub.user_management.uaa.url") %>
<% if_p('credhub.data_storage.username') do %>
spring.datasource.username=<%= p("credhub.data_storage.username") %>
<% if_p('credhub.data_storage.password') do %>
spring.datasource.password=<%= p("credhub.data_storage.password") %>
<% end %>
<% end %>
spring.jpa.hibernate.ddl-auto=update
<%
case p("credhub.data_storage.type")
  when 'in-memory'
    @url = 'jdbc:h2:mem'
  when 'postgres'
    @url = "jdbc:postgresql://#{p("credhub.data_storage.host")}:#{p("credhub.data_storage.port")}/#{p("credhub.data_storage.database")}"
  when 'mysql'
    @url = "jdbc:mysql://#{p("credhub.data_storage.host")}:#{p("credhub.data_storage.port")}/#{p("credhub.data_storage.database")}"

    case p('credhub.data_storage.require_tls')
      when true
        @url << "?useSSL=true&requireSSL=true&verifyServerCertificate=false"
      when false
        @foo = 'bar'
      else
        raise ArgumentError, "credhub.data_storage.require_tls (#{p('credhub.data_storage.require_tls')}) must be set to \"true\" or \"false\"."
    end
  else
    raise ArgumentError, 'credhub.data_storage.type must be set to "mysql", "postgres", or "in-memory".'
end
%>
spring.datasource.url=<%=@url%>
<% if_p('credhub.ssl.certificate', 'credhub.ssl.private_key') do %>
server.ssl.enabled=true
server.ssl.key-store=/var/vcap/jobs/credhub/config/cacerts.jks
server.ssl.password=changeit
server.ssl.key-alias=credhub_ssl_cert
<% end %>
security.oauth2.resource.jwt.key-value=<%= p("uaa.jwt.verification_key").split("\n").map(&:strip).join() %>
