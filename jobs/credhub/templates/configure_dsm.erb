#!/bin/bash

set -eu

<%
  active_key = p('credhub.encryption.keys').find { |key| key.key?('active') }
  active_provider_name = active_key['provider_name']
  active_provider = p('credhub.encryption.providers').find { |provider| provider['name'] == active_provider_name }
  dsm_servers = active_provider['servers'] || []
%>

echo "DSM configuration detected, begin DSM setup."

dpkg -i /var/vcap/packages/dsm-client/libapr1_1.5.0-1_amd64.deb
dpkg -i /var/vcap/packages/dsm-client/dsm-client_1.2.10136.1262.DEBIAN_amd64.deb

cp /usr/lib/dsm/dsm-advapi-1.0.jar $JAVA_HOME/jre/lib/ext/

ln -f -s /var/vcap/jobs/credhub/config/encryption.conf /etc/dsm/client.conf

<% (dsm_servers).each do |server| %>
HOST_PRIVATE_KEY_FILE=/var/vcap/jobs/credhub/config/<%= server['host'] %>.pem

cat > $HOST_PRIVATE_KEY_FILE <<EOL
<%= server['ssh_private_key'] %>
EOL

chmod 400 $HOST_PRIVATE_KEY_FILE

DSMUTIL_OUTPUT=$(ssh -oStrictHostKeyChecking=no -i $HOST_PRIVATE_KEY_FILE <%= server['user'] %>@<%= server['host'] %> "dsmutil agent create -u ${HOSTNAME} -p <%= server['partition'] %>")

if [[ "$DSMUTIL_OUTPUT" =~ ([0-9]+) ]]; then
  PIN=${BASH_REMATCH[0]}
else
  exit 1
fi

dsmcl register -p "$PIN"

<% end %>

echo "DSM setup finished."
