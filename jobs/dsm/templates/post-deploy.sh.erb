#!/bin/bash

set -eux
set -o pipefail

function waitForFile() {
  for i in `seq 120`; do
    if [ -f "$1" ]; then
      return
    fi

    sleep 1
  done

  echo "${1} not found after 2 minutes"
  exit 1
}

function waitForSCP() {
  set +e

  for i in `seq 100`; do
    scp -o StrictHostKeyChecking=no -i "$1" "$2" "$3"

    if [ $? -eq 0 ]; then
      set -e
      return
    fi

    sleep 1
  done

  echo "SCP failed after 100 tries"
  exit 1
}

function waitUntilGreatSuccess() {
  set +e

  for i in `seq 100`; do
    dsmutil system test

    if [ $? -eq 0 ]; then
      set -e
      return
    fi

    sleep 1
  done

  echo "No great success. You've embarrassed your family."
  exit 1
}

echo "STARTING RUN"

HOST_IP="<%= spec.address %>"
PEER_IP="<%= (p('dsm.ips') - [spec.address]).first %>"
FIRST_IP="<%= p('dsm.ips').first %>"
ALL_IPS="<%= p('dsm.ips').join(', ') %>"

HOST_CERT="${HOST_IP}.cert"
PEER_CERT="${PEER_IP}.cert"

SSH_PRIVATE_KEY="/root/ssh.pem"

dsmutil system create -t sslgen -i "$HOST_IP"

cat <<EOF > "$SSH_PRIVATE_KEY"
<%= p('dsm.ssh_private_key') %>
EOF

chmod 0400 "$SSH_PRIVATE_KEY"

mkdir -p /home/vcap/.ssh
chown vcap /home/vcap/.ssh
cat <<EOF >> /home/vcap/.ssh/authorized_keys
<%= p('dsm.ssh_public_key') %>
EOF

waitForSCP "$SSH_PRIVATE_KEY" "/etc/dsm/ssl/${HOST_CERT}" "vcap@${PEER_IP}:${HOST_CERT}"

waitForFile "/home/vcap/$PEER_CERT"

rm -f "$SSH_PRIVATE_KEY"

mkdir -p /etc/dsm/trust
mv "/home/vcap/$PEER_CERT" /etc/dsm/trust

cat <<EOF > /etc/dsm/dsm.conf
entries=${FIRST_IP}
pairs=(${ALL_IPS})
EOF

/etc/init.d/dsm restart

waitUntilGreatSuccess

if [ "$HOST_IP" = "$FIRST_IP" ]; then
  dsmutil system create -t syskeys
  /etc/init.d/dsm restart
fi
